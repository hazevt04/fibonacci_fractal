

1) Get Command Line Args (FibFractalInputParser object produces FibFractalInput object)
   Use get_opt_long to parse command line
   Need to get/set
      verbose flag (bool)
      num_iterations (unsigned long)
      color (unsigned int)
      output file name (string)

2) Generate Fibonacci Fractal (FibFractalBuilder object consumes FibFractalInput object and produces FibFractalWord object)
      For num_iterations, 
         Append bits to string based on Fib fractal rules. 
         Based on string, append new Segment objects to list within FibFractal

3) Convert Segments list to ImageData object
      For each Segment, set ImageData object's data

5) Render ImageData (PNGRenderer Class which also took in FibFractalInput object)
      Output pixel data to output file name

Base Classes-->ExtendedClasses:
---------------------------------
BaseInput-->FibFractalInput
BaseInputParser--> FibFractalInputParser
BaseFractal-->FibFractal
BaseRenderer-->PNGRenderer
MyUtils

class FibFractalInputs
   parseArgs( argv, argc )
   bool verbose
   unsigned long num_iterations
   unsigned int color
   string output_file

class FibFractalWord
   genFibWord( num_iterations )
   string fib_word

class FibFractalSegments
   genSegments( FractalWord* fword )
   list<Segment> segment_list

class FibFractal
   setFibFractalWord( FibFractalWord* fibword )
   setFibFractalSegments( FibFractalSegments* fibsegments )
   FibFractalWord* fibword
   FibFractalSegments* fibsegments
   
class FibFractalBuilder
